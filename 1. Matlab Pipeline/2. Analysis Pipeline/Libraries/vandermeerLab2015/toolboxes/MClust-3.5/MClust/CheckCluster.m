function CheckCluster(fn, WV, StartingTime, EndingTime, PrintFlag, title_string, was_scaled, varargin)%% CheckCluster(fn, WV, StartingTime, EndingTime)%% INPUTS%    fn: filename of cluster file%    WV: tsd of selected TT%    StartingTime and EndingTime -- used to calculate firing rate-- if not specified, start%      and end time are guessed from the data.%    PrintFlag -- prints out jpegs%    title_string -- prints a user defined title on the page above the average waveform.%    was_scaled -- if the spikes passed in are a subset of the cluster,%      indicates original cluster size%% OUTPUTS : none%% Shows key points of cluster%% ADR 1998% version L1.0% RELEASED as part of MClust 2.0% See standard disclaimer in Contents.m% cowen% Added an optional title string.% Changed the printflag to require it to have a 0 or a 1.%%% Status: PROMOTED (Release version) % See documentation for copyright (owned by original authors) and warranties (none!).% This code released as part of MClust 3.0.% Version control M3.0.global MClust_AverageWaveform_ylim % ncstTotalTime = EndingTime - StartingTime;pdfs = [];AreaIntersect = [];ChiVal = [];L_Intra = [];L_Extra = [];L_Ratio = [];Dists = [];ClustInd = [];QuartDist = [];T = ts(Range(WV, 'ts'));extract_varargin;if nargin <= 5    title_string = [];endif nargin <=6    was_scaled = 0;endtext_font_size = 7;pk = Peak(WV);if isempty(T)   returnendWVD = Data(WV);ScSize = get(0, 'ScreenSize');CheckClusterFigHandle = figure('Name', fn, 'NumberTitle', 'Off', 'Position', [ ScSize(3)/4 1 ScSize(3)/2 ScSize(4)*0.9]);%clffigure(CheckClusterFigHandle)colormap(1-gray);nPlot = 4;mPlot = 2;% PLOT: AvgWaveformfigure(CheckClusterFigHandle);subplot(nPlot,mPlot,1);CO = get(gca,'ColorOrder');nWVSamples = size(WVD,3);for it = 1:4  mWV = squeeze(mean(WVD(:,it,:),1));  sWV = squeeze(std(WVD(:,it,:),1));  xrange = ((nWVSamples + 2) * (it-1)) + (1:nWVSamples);   hold on;  h = plot(xrange, mWV);  set(h, 'Color',CO(it,:));  h=errorbar(xrange(1:2:end),mWV(1:2:end),sWV(1:2:end),'.');     set(h, 'Color',CO(it,:),'MarkerSize',1);endaxis off;axis([0 4*(nWVSamples + 2) MClust_AverageWaveform_ylim]); % ncstset(gca,'FontSize',text_font_size);if isempty(title_string)    title('Average Waveform');else    title(title_string)endhold offdrawnow% PLOT: Cluster Stats (text)nmsgs = 1;fn2 = fn;fn2(fn2 == '_') = '-';msgstr = {fn2};nmsgs = nmsgs+1;if isempty(getenv('USER'))   msgstr{nmsgs} = sprintf('Cut on %s', date);else      msgstr{nmsgs} = sprintf('Cut by %s on %s', getenv('USER'), date);endnmsgs = nmsgs+1;if was_scaled > 0    nSpikes = was_scaled;else    nSpikes = length(Data(T));endmsgstr{nmsgs} = sprintf('%d spikes ', nSpikes);nmsgs = nmsgs+1;mISI = mean(diff(Data(T)));fr = 10000 * nSpikes/(TotalTime);msgstr{nmsgs} = sprintf('firing rate = %.4f spikes/sec ', fr);nmsgs = nmsgs+1;sw = SpikeWidth(WV);mSW = mean(sw,1);vSW = std(sw, 1);msgstr{nmsgs}   = sprintf('spikewidth (Ch1,2) = %4.2f +/- %4.2f   %4.2f +/- %4.2f', ...   mSW(1), vSW(1), mSW(2), vSW(2));msgstr{nmsgs+1} = sprintf('spikewidth (Ch3,4) = %4.2f +/- %4.2f   %4.2f +/- %4.2f', ...   mSW(3), vSW(3), mSW(4), vSW(4));nmsgs = nmsgs+2;p2v = PeakToValley(WV);mp2v = mean(p2v,1);vp2v = std(p2v,1);msgstr{nmsgs}   = sprintf('peak/valley (Ch1,2) = %4.2f +/- %4.2f    %4.2f +/- %4.2f', ...   mp2v(1), vp2v(1), mp2v(2), vp2v(2));msgstr{nmsgs+1} = sprintf('peak/valley (Ch3,4) = %4.2f +/- %4.2f    %4.2f +/- %4.2f', ...   mp2v(3), vp2v(3), mp2v(4), vp2v(4));nmsgs = nmsgs+2;figure(CheckClusterFigHandle);subplot(nPlot, mPlot, 2);h=text(0,0.5, msgstr);set(h,'FontSize',text_font_size);axis off;drawnow;% PLOT: HistISIfigure(CheckClusterFigHandle);subplot(nPlot, mPlot, 3);HistISI(T);set(gca,'FontSize',text_font_size);title('histogram of log(ISI)','FontSize',text_font_size);ylabel('nSpikes','FontSize',text_font_size);xlabel('msec','FontSize',text_font_size);drawnow%%%%%%%%%%%%%%%%%%%%%%%%%%%% Peak Plot%%%%%%%%%%%%%%%%%%%%%%%%%%%figure(CheckClusterFigHandle);subplot(nPlot, mPlot, 4);plot(pk(:,2),pk(:,1),'.');hold on;plot(pk(:,2),-pk(:,3),'.');plot(-pk(:,4),-pk(:,3),'.');plot(-pk(:,4),pk(:,1),'.');A = axis;plot([0 0], A(3:4), 'k-', A(1:2), [0 0], 'k-', 0,0,'+r');H = findobj(gca, 'Type', 'Line');set(H, 'MarkerSize', 2);axis off;title('Peak Plot','FontSize',text_font_size);%%%%%%%%%%%%%%%%%%%%%%%%%%%% AutoCorrs%%%%%%%%%%%%%%%%%%%%%%%%%%%acorr_bin_msec = 4;[histvals,x] = AutoCorr(Data(T), acorr_bin_msec, 250); % This is peter's C AutoCorr%acorr(floor(length(acorr)/2+1)) = 0;    % set 0 lag to 0 for scaling% Cannot use bar-- there is some matlab bug that prevents it's use in this subplot.figure(CheckClusterFigHandle);if ~isempty(Dists)	subplot(nPlot*2, mPlot, 9);else	subplot(nPlot,mPlot,5)endplot(x,histvals);			% show acorrfigure(CheckClusterFigHandle);xlabel(['msec (' num2str(acorr_bin_msec) 'msec binsize)'],'FontSize',text_font_size);ylabel('rate','FontSize',text_font_size);h = title('Autocorrelation','FontSize',text_font_size);drawnow;figure(CheckClusterFigHandle);set(gca,'FontSize',text_font_size);acorr_bin_msec = 1;[histvals,x] = AutoCorr(Data(T), acorr_bin_msec, 50); % This is peter's C AutoCorr%acorr(floor(length(acorr)/2+1)) = 0;    % set 0 lag to 0 for scaling% Cannot use bar-- there is some matlab bug that prevents it's use in this subplot.figure(CheckClusterFigHandle);if ~isempty(Dists)	subplot(nPlot*2, mPlot, 11);else	subplot(nPlot, mPlot, 6);endbar(x,histvals);			% show acorrfigure(CheckClusterFigHandle);xlabel(['msec (' num2str(acorr_bin_msec) 'msec binsize)'],'FontSize',text_font_size);ylabel('rate','FontSize',text_font_size);% h = title('Autocorrelation','FontSize',text_font_size);drawnow;figure(CheckClusterFigHandle);set(gca,'FontSize',text_font_size);%%%%%%%%%%%%%%%%%%%%%%%%%%%% ClusterSeparation%%%%%%%%%%%%%%%%%%%%%%%%%%%if ~isempty(Dists)  && nSpikes > 10	subplot(nPlot,mPlot,6)    if exist('CluSep', 'var')        IsolationDist = CluSep.IsolationDist;        L_Ratio = CluSep.L_Ratio;    end	boxplot([Dists(find(ClustInd)); Dists(find(~ClustInd))],[repmat(1,size(find(ClustInd))); ...			repmat(2,size(find(~ClustInd)))],1,'+r',0);	title('Box Plot')	set(gca,'FontSize',text_font_size);	set(gca,'Yticklabel',{'In'; 'Out'},'Xtick',...		logspace(0,floor(log10(max(Dists))),floor(log10(max(Dists)))+1),'Xlim',[0 max(Dists)],'Xscale','log')	title(sprintf('Separation:  L-Ratio =  %5.4f  ID =  %4.1f',L_Ratio,IsolationDist),...		'FontSize',text_font_size)	xlabel('Mahalanobis distance')end%%%%%%%%%%%%%%%%%%%%%%%%%%% Time plot%%%%%%%%%%%%%%%%%%%%%%%%%%figure(CheckClusterFigHandle);subplot(nPlot, mPlot, 7:8);T = ts(Range(WV, 'ts'));plot(Data(T)/10000/60,pk,'.');set(gca,'FontSize',text_font_size);set(gca,'XLim',[StartTime(T)/10000/60 EndTime(T)/10000/60]);xlabel('Time (minutes)','FontSize',text_font_size);ylabel('Peak','FontSize',text_font_size);H = findobj(gca, 'Type', 'Line');set(H, 'MarkerSize', 2);if exist('PrintFlag', 'var')    if PrintFlag        orient tall;        %print('-dmeta', [fn '.emf']);        %print('-djpeg', [fn '.jpg']);        print('-deps', [fn '.eps']);    endend