function OK = WriteTFiles(clusters)% OK = WriteTFiles(clusters)%% MClust%  writes a T-file for each cluster%% ADR 1998% version M1.0% RELEASED as part of MClust 3.5% See standard disclaimer in Contents.m%% cowen 2001. Modified so that you can send in a vector of timestamps in the% TT variable instead of a monstrous TT tsd.% % modified ADR to only take the clusters to write as input.% gets the rest from globals%% Status: PROMOTED (Release version) % See documentation for copyright (owned by original authors) and warranties (none!).% This code released as part of MClust 3.5.% Version control M3.5.global MClust_TTdn MClust_TTfn MClust_TTextglobal MClust_FeatureTimestamps MClust_FeatureSourcesglobal MClust_Clustersif isempty(clusters)	clusters = MClust_Clusters;endbasefn = fullfile(MClust_TTdn, MClust_TTfn);    nClust = length(clusters);% ADR 2008 - delete .t set if replacingfc = FindFiles([MClust_TTfn '_*.t'], 'StartingDirectory', MClust_TTdn, 'CheckSubdirs', 0);if ~isempty(fc)	reply = questdlg({'There are already .t files for this tetrode.','Do you want to replace them?'},...		'Overwrite t files?', 'Yes', 'Cancel', 'Yes');	if streq(reply, 'Yes')		for iC = 1:length(fc)			delete(fc{iC});		end	else		OK = false;		return	endendfor iC = 1:nClust   DisplayProgress(iC, nClust, 'Title', 'Writing T files');   f = FindInCluster(clusters{iC});   if ~isempty(f)      TS = MClust_FeatureTimestamps(f);      fn = [basefn '_' num2str(iC) '.t'];      fp = fopen(fn, 'wb', 'b');      if (fp == -1)         errordlg(['Could not open file"' fn '".']);      end      WriteHeader(fp, 'T-file', 'Output from MClust''Time of spiking stored in timestamps (tenths of msecs)', 'as unsigned integer');      fwrite(fp, TS, 'uint64');      fclose(fp);   endendOK = true;