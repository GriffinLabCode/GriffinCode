This folder is used to generate the Int file. This document walks you through the appropriate steps to do so.
_____________________________________________________________________________________________________________

Int_file description: The int file is a matrix composed of time-stamps that give the user an approximation for when the animal
                      entered certain locations. The rows indicate maze-traversals - for the DNMP task, odd rows are sample
                      runs, even rows are choice runs. Every group of two rows indicates 1 trial. The columns indicate maze
                      positions that we've deemed relevant. To demonstrate these two points: Int(1,1) is the time during the first
                      trial, on the first sample run, at stem entry. Below is a description of what each column indicates in the order
                      that the rat runs the maze. Note that columns are out of order - this was inherited and could be fixed in future
                      releases:
                      
                      Column 1: stem entry (AKA start-box exit)
                      Column 5: stem exit (AKA t-junction entry)
                      Column 6: t-junction exit
                      Column 2: goal-zone entry
                      Column 7: goal-zone exit (AKA return-arm entry)
                      Column 8: start-box entry (AKA return-arm exit)
                      
                      Column 3: trajectory where 1s are left turns and 0s are right turns
                      Column 4: behavioral accuracy where 1s are incorrect trials and 0s are correct.
                                Note that for column 4, an incorrect trial will have 1s on both the sample
                                and choice runs
                                
                      Some iterations of Int files will also have the following (particularly Ints created for LFP on DNMP):
                      
                      Column 9: 1s indicate a trial that had LFP with clipping artifacts, 0s indicate good LFP
                      Column 10: 0s indicate sample, 1s indicate choice phases
                                
_____________________________________________________________________________________________________________
Steps for generating the Int file:

    1) Convert your position data to .mat files by running NL2Mat_complete_short.m - note you will have to define
       your session directory, named 'datafolder'. Also note that NL2Mat_complete_short.m utilizes neuralynx code
       that is note shared on this website. To access it, copy and paste the following directory into the file
       explorer window: 
       
                              Lab Procedures and Protocols\MATLABToolbox\Nlx2Mat
    
    2) Open view_VT_data.m. You will need to define which room to use and whether or not to interpolate
       missing data (see what happens before and after interpolation). Next, run the script. You will notice a figure
       appear with boxes that denote locations on the maze. If you wish to adjust the boxes, you do so by editing either the 
       section '%% L room (up/down)' if recordings were in the left room, or '%% R room (sideways)' if in right room. Once you
       are comfortable with the boundaries used to define locations (i.e. stem, tjunction, etc...), copy the section that 
       corresponds to the room you used (so if you used Left room, copy from rRW_fld to LAL_fld (including the LAL_fld variable).
       
    3) Paste the copied boundaries to the 'whereishe_master.' function under the '%% copy/paste new field dimensions...' section.
       
    4) After you've copied into the whereishe_master, you open the Int_DNMP_master.m script, define the directory for the session
       of interest, and define whether you want to interpolate missing video-tracking data.
              - We advise to interpolate the missing data or correct it yourself. To see why corrections are important,
                don't interpolate the data, go through the rest of the instructions here, open the check_int.m script, 
                define the same parameters for maze locations, and run the script. What you will find is there are cases 
                where the camera loses the rat causing inappropriate time-stamps to be defined as a maze location. For example, 
                you may define the t-junction and get the time-stamps for when the animal entered the t-junction, but if the 
                camera lost the animal, then picked him back up after t-junction entry, your t-junction entry time-stamp will 
                be beyond t-junction entry and therefore not accurately depicting what you defined.
                      
Your Int_file.mat should be saved under the folder that you defined as 'datafolder' and is ready for future analysis.
